{"version":3,"sources":["img/test.jpg","MenuBtn.js","MenuModes.js","MenuTools.js","MenuItems.js","index.js"],"names":["module","exports","MenuBtn","props","className","id","data","mode","tool","item","colorName","isActive","type","image","onClick","defaultValue","customColor","onChange","changeColor","alt","src","process","colorStyle","background","color","style","MenuModes","listItems","toolData","map","i","key","currentMode","MenuTools","currentModeData","tools","currentTool","MenuItems","menuItems","compareTarget","colors","find","items","currentItem","App","canvas","React","createRef","urlInput","upLoadImg","bind","loadMapFromUrl","downLoadCanvas","changeMode","changeTool","changeItem","state","isImgUploaded","canvasSizeX","setting","squareSize","squarePerBlock","mapXBlock","mapPadding","canvasSizeY","mapYBlock","length","prevProps","paper","project","this","handleDraw","handleBuildAndPlant","e","fileName","label","target","nextElementSibling","labelVal","innerHTML","value","split","pop","uploadImg","files","reader","FileReader","that","addEventListener","setState","renderMap","result","readAsDataURL","url","sampleImg","current","fetch","then","response","blob","document","body","classList","add","remove","img","toDataURL","a","createElement","href","download","appendChild","click","width","height","setup","raster","Raster","mapLayer","Layer","name","activate","Shape","Rectangle","x","y","fillColor","colorBg","onLoad","mapRasterWidth","sampleEndX","sampleStartX","mapRasterHeight","sampleEndY","sampleStartY","mapRaster","getSubRaster","visible","size","Size","getPixel","renderGrid","componentDidUpdate","gridLine","gridLayer","dashStroke","Path","Line","Point","strokeWidth","dashArray","strokeColor","colorMainGrid","colorGrid","locked","meridianMark","PointText","colorGridMark","fontSize","content","String","fromCharCode","fontWeight","j","parallelMark","closest","getAttribute","clearBrushHover","clearNotBuiltItem","point","layers","buildLayer","children","forEach","itemSet","deletBtn","opacity","drawLayer","drawTool","Tool","thisTool","thisColors","refPointDist","activeLayer","brush","hideDist","brushSquare","onMouseMove","position","onMouseDown","isEditableArea","draw","onMouseDrag","testPoint","drawRect","hitResult","hitTest","fill","Math","floor","random","buildTool","buildPath","baseBlock","buildItem","isBuild","isEdit","thisItem","rotate","parseInt","replace","strokeColorBilding","Group","Circle","strokeColorPlant","addChild","buildImage","imageSizeSquare","deletBtnBg","center","bounds","_width","radius","deletBtnIcon","getSnapPoint","built","tolerance","parent","onMouseUp","querySelectorAll","btn","blur","isX","_height","lastBuild","ref","title","openModal","closeModal","accept","htmlFor","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c7317272.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.5da2d115.jpg\";","import React from 'react';\n\nfunction MenuBtn(props) {\n  const id = props.data.mode || props.data.tool || props.data.item || props.data.colorName;\n  let className;\n  const isActive = props.isActive ? 'active' : '';\n  if (props.data.colorName) {\n    className = `color ${props.data.colorName} ${isActive}`;\n  }\n  else if (props.data.item) {\n    className = `item ${props.type} ${props.data.item} ${isActive}`;\n  }\n  else {\n    className = `${props.type} ${isActive}`;\n  }\n  if (props.data.image) {\n    if (id === 'colorCustom') {\n      return (\n        <button id={id} onClick={props.onClick} className={className}>\n          <label>\n            <input type='color' defaultValue={props.customColor} onChange={props.changeColor} />\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </label>\n        </button>\n      )\n    }\n    else {\n      if (props.type === 'tree') {\n        const colorStyle = {background: props.data.color};\n        return (\n          <button id={id} onClick={props.onClick} className={className} style={colorStyle}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n      else {\n        return (\n          <button id={id} onClick={props.onClick} className={className}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n    }\n  }\n  else {\n    let color;\n    if (props.type === 'flower') {\n      color = props.data.item;\n    }\n    else {\n      color = props.data.color;\n    }\n    const colorStyle = {background: color};\n    return (\n      <button id={id} onClick={props.onClick} className={className}>\n        <div className=\"colorBlock\" style={colorStyle}></div>\n      </button>\n    )\n  }\n}\n\nexport default MenuBtn;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuModes(props) {\n  const toolData = props.toolData;\n  const listItems = toolData.map((mode, i) =>\n    <li key={i}>\n      <MenuBtn data={mode} type='mode' isActive={props.currentMode === mode.mode} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nexport default MenuModes;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuTools(props) {\n  const listItems = props.currentModeData.tools.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool} type='tool' isActive={props.currentTool === tool.tool} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nexport default MenuTools;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuItems(props) {\n  let menuItems, compareTarget;\n  const type = props.currentTool;\n  if (props.currentMode === 'draw') {\n    menuItems = props.currentModeData.colors;\n    compareTarget = 'colorName';\n  }\n  else {\n    const currentTool = props.currentModeData.tools.find((data) => {\n        if (data.tool === props.currentTool) {\n          return data;\n        }\n      },\n    );\n    menuItems = currentTool.items;\n    compareTarget = 'item';\n  }\n  const listItems = menuItems.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool} type={type} isActive={tool[compareTarget] === props.currentItem} onClick={props.onClick} customColor={props.customColor} changeColor={props.changeColor} />\n    </li>\n  );\n  return (\n    <div className=\"menuItems\">\n      <hr />\n      <ul>\n        {listItems}\n      </ul>\n    </div>\n  )\n}\n\nexport default MenuItems;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport paper from 'paper';\nimport setting from './setting.json';\nimport toolData from './toolData.json';\nimport MenuModes from './MenuModes.js';\nimport MenuTools from './MenuTools.js';\nimport MenuItems from './MenuItems.js';\nimport sampleImg from './img/test.jpg';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.urlInput = React.createRef();\n    this.upLoadImg = this.upLoadImg.bind(this);\n    this.loadMapFromUrl = this.loadMapFromUrl.bind(this);\n    this.downLoadCanvas = this.downLoadCanvas.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.changeTool = this.changeTool.bind(this);\n    this.changeItem = this.changeItem.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.state = {\n      isImgUploaded: false,\n      canvasSizeX: setting.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding * 2,\n      canvasSizeY: setting.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 2,\n      squareSize: setting.squareSize,\n      currentMode: toolData.toolData[0].mode,\n      currentModeData: toolData.toolData[0],\n      currentTool: toolData.toolData[0].tools[0].tool,\n      currentItem: toolData.toolData[0].colors[0].colorName,\n      customColor: toolData.toolData[0].colors[toolData.toolData[0].colors.length - 1].color[0]\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (paper.project) {\n      if (this.state.currentMode === 'draw') {\n        this.handleDraw();\n      }\n      else if ((this.state.currentMode === 'build' || this.state.currentMode === 'plant') && this.state.currentItem) {\n        this.handleBuildAndPlant();\n      }\n    }\n  }\n  upLoadImg(e) {\n    const label = e.target.nextElementSibling;\n    const labelVal = label.innerHTML;\n\t\tlet fileName = '';\n\t\tfileName = e.target.value.split('\\\\').pop();\n\t\tif (fileName) {\n      label.innerHTML = fileName;\n    }\n\t\telse {\n      label.innerHTML = labelVal;\n    }\n    const uploadImg = e.target.files[0];\n    const reader = new FileReader();\n    const that = this;\n    reader.addEventListener(\"load\", function () {\n      that.setState({\n        isImgUploaded: true\n      });\n      that.renderMap(reader.result);\n    }, false);\n    if (uploadImg) {\n      reader.readAsDataURL(uploadImg);\n    }\n  }\n  loadMapFromUrl(e) {\n    const that = this;\n    let url;\n    if (e.target.id === 'mapUseDefault') {\n      url = sampleImg;\n    }\n    else {\n      url = this.urlInput.current.value;\n    }\n    fetch(url)\n    .then(function(response) {\n      return response.blob()\n    })\n    .then(function(blob) {\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.addEventListener(\"load\", function () {\n        that.setState({\n          isImgUploaded: true\n        });\n        that.renderMap(reader.result);\n      }, false);\n    });\n  }\n  openModal() {\n    document.body.classList.add(\"modal-open\");\n  }\n  closeModal() {\n    document.body.classList.remove(\"modal-open\");\n  }\n  downLoadCanvas() {\n    const canvas = this.canvas.current;\n    const img = canvas.toDataURL('image/jpg');\n    var a = document.createElement('a');\n    a.href = img;\n    a.download = 'myIslandImg.jpg';\n    document.body.appendChild(a);\n    a.click();\n  }\n  renderMap(url) {\n    const canvas = this.canvas.current;\n    canvas.width = this.state.canvasSizeX;\n    canvas.height = this.state.canvasSizeY;\n    paper.setup(canvas);\n    let raster = new paper.Raster(url);\n    const mapLayer = new paper.Layer();\n    mapLayer.name = 'mapLayer';\n    const drawLayer = new paper.Layer();\n    drawLayer.name = 'drawLayer';\n    const buildLayer = new paper.Layer();\n    buildLayer.name = 'buildLayer';\n    mapLayer.activate();\n    const bgRect = new paper.Shape.Rectangle({\n      x: 0,\n      y: 0,\n      width: this.state.canvasSizeX,\n      height: this.state.canvasSizeY,\n    });\n    bgRect.fillColor = setting.colorBg;\n    raster.onLoad = () => {\n      mapLayer.activate();\n      const mapRasterWidth = setting.sampleEndX - setting.sampleStartX;\n      const mapRasterHeight = setting.sampleEndY - setting.sampleStartY;\n      const mapRaster = raster.getSubRaster(new paper.Rectangle(setting.sampleStartX, setting.sampleStartY, mapRasterWidth, mapRasterHeight));\n      raster.remove();\n      mapRaster.visible = false;\n      mapRaster.size = new paper.Size(setting.squarePerBlock * setting.mapXBlock, setting.squarePerBlock * setting.mapYBlock);\n      for (let y = 0; y < mapRaster.height; y++) {\n        for(let x = 0; x < mapRaster.width; x++) {\n          const color = mapRaster.getPixel(x, y);\n          const pixelRect = new paper.Shape.Rectangle({\n            x: x * this.state.squareSize + setting.mapPadding, \n            y: y * this.state.squareSize + setting.mapPadding,\n            width: this.state.squareSize,\n            height: this.state.squareSize\n          });\n          pixelRect.fillColor = color;\n        }\n      }\n    }\n    this.renderGrid();\n    this.componentDidUpdate();\n  }\n  renderGrid() {\n    const gridLayer = new paper.Layer();\n    gridLayer.name = 'gridLayer';\n    gridLayer.activate();\n    let gridLine;\n    const dashStroke = [this.state.squareSize + 5, this.state.squareSize - 2]\n    for(let x = 0; x <= setting.squarePerBlock * setting.mapXBlock; x++) {\n      if (x % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, 0), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, setting.mapPadding), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY - setting.mapPadding));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for(let y = 0; y <= setting.squarePerBlock * setting.mapYBlock; y++) {\n      if (y % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(0, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX - setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for (let i = 0; i < setting.mapYBlock; i++) {\n      const meridianMark = new paper.PointText(new paper.Point(setting.mapPadding / 5, this.state.squareSize * setting.squarePerBlock * (i + 0.5) + setting.mapPadding ));\n      meridianMark.fillColor = setting.colorGridMark;\n      meridianMark.fontSize = this.state.squareSize * 2;\n      meridianMark.content = String.fromCharCode(65 + i);\n      meridianMark.fontWeight = 'bold';\n    }\n    for (let j = 0; j < setting.mapXBlock; j++) {\n      let parallelMark = new paper.PointText(new paper.Point(this.state.squareSize * setting.squarePerBlock * (j + 0.5) + setting.mapPadding, this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 1.8));\n      parallelMark.fillColor = setting.colorGridMark;\n      parallelMark.fontSize = this.state.squareSize * 2;\n      parallelMark.content = j + 1;\n      parallelMark.fontWeight = 'bold';\n    }\n  }\n  changeMode(e) {\n    const target = e.target.closest('button');\n    const currentMode = target.getAttribute('id');\n    const currentModeData = toolData.toolData.find((data) => {\n      if (data.mode === currentMode) {\n        return data;\n      }\n    });\n    let currentItem;\n    if (currentMode === 'draw') {\n      currentItem = currentModeData.colors[0].colorName;\n    }\n    else {\n      currentItem = currentModeData.tools[0].items[0].item;\n    }\n    this.setState({\n      currentMode: currentMode,\n      currentModeData: currentModeData,\n      currentTool: currentModeData.tools[0].tool,\n      currentItem: currentItem\n    });\n    this.clearBrushHover();\n    this.clearNotBuiltItem();\n  }\n  changeTool(e) {\n    const target = e.target.closest('button');\n    const currentTool = target.getAttribute('id');\n    let currentItem = this.state.currentItem;\n    if (this.state.currentMode !== 'draw') {\n      const toolData = this.state.currentModeData.tools.find((data) => {\n        if (data.tool === currentTool) {\n          return data;\n        }\n      });\n      currentItem = toolData.items[0].item;\n    }\n    this.setState({\n      currentTool: currentTool,\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeItem(e) {\n    const target = e.target.closest('button');\n    const currentItem = target.getAttribute('id');\n    this.setState({\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeColor(e) {\n    this.setState({\n      customColor: e.target.value\n    });\n  }\n  isEditableArea(point) {\n    if (point.x > setting.mapPadding && point.x < this.state.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding && point.y > setting.mapPadding && point.y < this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  handleDraw() {\n    paper.project.layers.buildLayer.children.forEach((itemSet)=>{\n      itemSet.children.deletBtn.opacity = 0;\n    });\n    paper.project.layers.drawLayer.activate();\n    const drawTool = new paper.Tool();\n    drawTool.activate();\n    let size, colors;\n    const thisTool = this.state.currentModeData.tools.find((tool) => {\n      if (tool.tool === this.state.currentTool) {\n        return tool;\n      }\n    });\n    size = thisTool.size ? thisTool.size : 0;\n    if (this.state.currentItem === 'colorCustom') {\n      colors = [this.state.customColor];\n    }\n    else {\n      const thisColors = this.state.currentModeData.colors.find((color) => {\n        if (color.colorName === this.state.currentItem) {\n          return color;\n        }\n      });\n      colors = thisColors.color;\n    }\n    const refPointDist = (size - 1) * setting.squareSize;\n\n    if (!paper.project.activeLayer.children.brush) {\n      let brush = new paper.Shape.Rectangle({\n        x: setting.hideDist * -1, \n        y: setting.hideDist * -1,\n        width: size * this.state.squareSize,\n        height: size * this.state.squareSize\n      });\n      brush.fillColor = 'rgba(255,255,255,0.1)';\n      brush.strokeColor = 'rgba(255,255,255,0.8)';\n      brush.name = 'brush';\n    }\n    else {\n      if (paper.project.activeLayer.children.brush.width / this.state.squareSize !== size) {\n        paper.project.activeLayer.children.brush.remove();\n        let brush = new paper.Shape.Rectangle({\n          x: setting.hideDist * -1, \n          y: setting.hideDist * -1,\n          width: size * this.state.squareSize,\n          height: size * this.state.squareSize\n        });\n        brush.fillColor = 'rgba(255,255,255,0.1)';\n        brush.strokeColor = 'rgba(255,255,255,0.8)';\n        brush.name = 'brush';\n      }\n    }\n    const brushSquare = paper.project.activeLayer.children.brush;\n    drawTool.onMouseMove = (e) => {\n      let point = new paper.Point();\n      point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      brushSquare.position = point;\n    }\n    drawTool.onMouseDown = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n    drawTool.onMouseDrag = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n  }\n  draw(e, size, refPointDist, colors) {\n    paper.project.layers.drawLayer.activate();\n    let point = new paper.Point(0, 0);\n    let testPoint = new paper.Point(0, 0);\n    const brushSquare = paper.project.activeLayer.children.brush;\n    point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist;\n    point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist;\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        const drawRect = new paper.Shape.Rectangle({\n          x: point.x + i * this.state.squareSize, \n          y: point.y + j * this.state.squareSize,\n          width: this.state.squareSize,\n          height: this.state.squareSize\n        });\n        brushSquare.position = [point.x + size * this.state.squareSize / 2, point.y + size * this.state.squareSize / 2];\n        testPoint.x = point.x + i * this.state.squareSize + this.state.squareSize / 2;\n        testPoint.y = point.y + j * this.state.squareSize + this.state.squareSize / 2;\n        let hitResult = paper.project.layers[2].hitTest(testPoint, {            \n          fill: true\n        });\n        if (hitResult && hitResult.item.name !== 'brush') {\n          hitResult.item.remove();\n        }\n        drawRect.fillColor = colors[Math.floor(Math.random() * colors.length)];\n      }\n    }\n  }\n  handleBuildAndPlant() {\n    paper.project.layers.buildLayer.activate();\n    const buildTool = new paper.Tool();\n    buildTool.activate();\n    let size;\n    let isBuild = true;\n    let isEdit = false;\n    let buildPath;\n    let baseBlock;\n    let buildItem;\n    const currentTool = this.state.currentTool;\n    const thisTool = this.state.currentModeData.tools.find((tool) => {\n      if (tool.tool === currentTool) {\n        return tool;\n      }\n    });\n    const thisItem = thisTool.items.find((item) => {\n      if (item.item === this.state.currentItem) {\n        return item;\n      }\n    });\n    if (this.state.currentMode === 'build') {\n      size = thisItem.size;\n\n      buildPath = new paper.Shape.Rectangle({\n        x: 0, \n        y: 0,\n        width: size[0] * this.state.squareSize,\n        height: size[1] * this.state.squareSize\n      });\n\n      // oblique bridge\n      if (this.state.currentItem === 'b45' || this.state.currentItem === 'b135') {\n        buildPath.size = [2 * this.state.squareSize, 4 * this.state.squareSize];\n        buildPath.rotate(parseInt(this.state.currentItem.replace('b', '')));\n      }\n      buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n      buildPath.strokeColor = setting.strokeColorBilding;\n      buildItem = new paper.Group([buildPath]);\n    }\n    else if (this.state.currentMode === 'plant') {\n      size = thisTool.size;\n      baseBlock = new paper.Shape.Rectangle({\n        x: 0, \n        y: 0,\n        width: size[0] * this.state.squareSize,\n        height: size[1] * this.state.squareSize\n      });\n      buildItem = new paper.Group([baseBlock]);\n\n      if (this.state.currentTool === 'tree') {\n        buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize * 0.7 / 2);\n        buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n        buildPath.strokeColor = setting.strokeColorPlant;\n        buildPath.opacity = 0.5;\n      }\n      else if (this.state.currentTool === 'flower') {\n        buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize / 2);\n        buildPath.fillColor = thisItem.item;\n        buildPath.strokeColor = setting.strokeColorPlant;\n      }\n      buildItem.addChild(buildPath);\n    }\n    \n    // add img\n    if (thisItem.image && (thisTool.tool !== 'bridge' && thisTool.tool !== 'slope')) {\n      const buildImage = new paper.Raster(process.env.PUBLIC_URL + '/' + thisItem.image);\n      buildImage.opacity = 0;\n      const squareSize = this.state.squareSize;\n      \n      const imageSizeSquare = currentTool === 'tree' ? 1 : 2.8;\n      buildImage.onLoad = function() {\n        buildImage.size = new paper.Size(buildImage.width * squareSize * imageSizeSquare / buildImage.height, squareSize * imageSizeSquare);\n        buildImage.position = buildItem.position;\n        buildImage.locked = true;\n        buildImage.opacity = 1;\n        buildItem.addChild(buildImage);\n      };\n    }\n    let deletBtnBg = new paper.Shape.Circle({\n      center: [buildItem.bounds.size._width, 0], \n      radius: this.state.squareSize * 0.8\n    });\n    deletBtnBg.fillColor = '#555';\n    let deletBtnIcon = new paper.PointText(new paper.Point(buildItem.bounds.size._width - (this.state.squareSize * 1.6 - 6) / 2, (this.state.squareSize * 1.6 - 6) / 2));\n    deletBtnIcon.fillColor = '#eee';\n    deletBtnIcon.content = '×';\n    deletBtnIcon.locked = true;\n    let deletBtn = new paper.Group([deletBtnBg, deletBtnIcon]);\n    deletBtn.name = 'deletBtn';\n    deletBtn.opacity = 0;\n    deletBtn.locked = true;\n    let itemSet = new paper.Group([buildItem, deletBtn]);\n    itemSet.position = [setting.hideDist * -1, setting.hideDist * -1];\n    buildTool.onMouseMove = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseDown = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n        isBuild = false;\n        itemSet.data.built = true;\n      }\n      else {\n        paper.project.activeLayer.children.forEach((itemSet) => {\n          itemSet.children.deletBtn.opacity = 0;\n        });\n        const hitResult = paper.project.layers.buildLayer.hitTest(e.point, {\n          fill: true,\n          tolerance: 1\n        });\n        if (!hitResult) {\n          isEdit = false;\n          return;\n        }\n        else {\n          if (!(hitResult.item.parent.name === 'deletBtn')) {\n            itemSet = hitResult.item.parent.parent;\n            isEdit = true;\n            itemSet.children.deletBtn.opacity = 1;\n            itemSet.children.deletBtn.locked = false;\n          }\n          else {\n            hitResult.item.parent.parent.remove();\n          }\n        }\n      }\n    }\n    buildTool.onMouseDrag = (e) => {\n      if (isEdit) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseUp = (e) => {\n      this.setState({\n        currentItem: null\n      });\n      document.querySelectorAll('button.item').forEach(function(btn){\n        btn.blur();\n      });\n    }\n  }\n  getSnapPoint(point, isX, itemSet) {\n    let snapPoint;\n    if (isX) {\n      snapPoint = point - (point - itemSet.bounds._width / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    else {\n      snapPoint = point - (point - itemSet.bounds._height / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    return snapPoint;\n  }\n  clearBrushHover() {\n    if (paper.project.layers.drawLayer.children.brush) {\n      paper.project.layers.drawLayer.children.brush.remove();\n    }\n  }\n  clearNotBuiltItem() {\n    const lastBuild = paper.project.layers.buildLayer.children[paper.project.layers.buildLayer.children.length - 1];\n    if (lastBuild && !lastBuild.data.built) {\n      lastBuild.remove();\n    }\n  }\n  render() {\n    if (!this.state.isImgUploaded) {\n      return (\n        <div className='intro'>\n          <h1><div>Lazy Island Planner</div></h1>\n          <p>這是一個給懶人用的《集合啦！動物森友會》島嶼規劃工具。</p>\n          <p>上傳你擷取的島嶼地圖畫面（如下圖）即可開始，也可以<button className='link' id='mapUseDefault' onClick={this.loadMapFromUrl}>先用我的地圖試試看</button>。</p>\n          <img src={sampleImg} alt='上傳圖示意圖' className='island-map' />\n          <form>\n            <input type='file' accept='image/*' id='img-input' onChange={this.upLoadImg} />\n            <label htmlFor='img-input' className='btn fake-input'>上傳圖檔</label>\n            <div id='error-message'></div>\n            <div className='or'>或</div>\n            <div className='use-url'>\n              <label>使用已上傳的圖片連結：</label>\n              <input type='text' ref={this.urlInput}  /> \n              <button type='button' id='mapFromUrl' onClick={this.loadMapFromUrl}>確定</button>\n            </div>\n          </form>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className='wrapper'>\n          <div className='editor'>\n            <aside className='tool-aside'>\n              <div className='modes'>\n                <MenuModes toolData={toolData.toolData} currentMode = {this.state.currentMode} onClick={this.changeMode} />\n              </div>\n              \n              <div className='tools'>\n                <MenuTools currentTool={this.state.currentTool} currentModeData={this.state.currentModeData} onClick={this.changeTool} />\n                <MenuItems currentMode={this.state.currentMode} currentModeData={this.state.currentModeData} currentTool={this.state.currentTool} currentItem={this.state.currentItem} onClick={this.changeItem} customColor={this.state.customColor} changeColor={this.changeColor} /> \n              </div>\n            </aside>\n            <canvas id='canvas' ref={this.canvas}>\n            </canvas>\n            <aside className='sub-aside'>\n              <ul>\n                <li>\n                  <button type='button' title='說明頁' onClick={this.openModal}>\n                    <img src={process.env.PUBLIC_URL + '/icon_question.svg'} alt='說明頁' />\n                  </button>\n                </li>\n                <li>\n                  <button type='button' title='下載地圖' onClick={this.downLoadCanvas}>\n                    <img src={process.env.PUBLIC_URL + '/icon_download.svg'} alt='說明頁' />\n                  </button>\n                </li>\n              </ul>\n            </aside>\n          </div>\n          <div id='info-modal'>\n            <button className='close-modal round' onClick={this.closeModal}>×</button>\n            <h1><div>Lazy Island Planner</div></h1>\n            <p>這是個功能非常陽春的懶人工具，<strong>沒有回復功能，只能重新整理回到開始畫面讀取檔案從頭再來</strong>。<strong>也不能儲存編輯到一半的狀態，只能把成品下載成圖檔。</strong></p>\n            <p>如果你覺得這個破工具很難用，可以試試看其他專業開發者做的高級工具：</p>\n            <ul>\n              <li>\n                <a href='https://eugeneration.github.io/HappyIslandDesigner/' target='_blank'>Happy Island Designer</a>\n              </li>\n              <li>\n                <a href='https://bobacupcake.itch.io/island-planner' target='_blank'>Island Planner</a>\n              </li>\n            </ul>\n            <button className='btn close-modal' onClick={this.closeModal}>關閉</button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
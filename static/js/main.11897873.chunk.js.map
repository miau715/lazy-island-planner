{"version":3,"sources":["img/test.jpg","toolData.js","MenuBtn.js","MenuModes.js","MenuTools.js","MenuItems.js","i18n.js","index.js"],"names":["module","exports","toolData","Map","MenuBtn","props","className","id","data","mode","tool","item","colorName","isActive","type","image","onClick","defaultValue","customColor","onChange","changeColor","alt","src","process","colorStyle","background","color","style","MenuModes","listItems","map","i","key","currentMode","MenuTools","currentModeData","tools","currentTool","MenuItems","menuItems","compareTarget","colors","get","items","currentItem","i18n","use","LanguageDetector","initReactI18next","init","resources","translation","fallbackLng","keySeparator","interpolation","escapeValue","App","canvas","React","createRef","urlInput","upLoadImg","bind","loadMapFromUrl","downLoadCanvas","changeMode","changeTool","changeItem","state","language","isImgUploaded","canvasSizeX","setting","squareSize","squarePerBlock","mapXBlock","mapPadding","canvasSizeY","mapYBlock","size","e","target","parentElement","querySelectorAll","forEach","btn","classList","remove","add","changeLanguage","name","prevProps","paper","project","this","handleDraw","handleBuildAndPlant","fileName","label","nextElementSibling","labelVal","innerHTML","value","split","pop","uploadImg","files","reader","FileReader","that","img","Image","window","URL","createObjectURL","addEventListener","errorMessageDiv","document","getElementById","width","imgWidth","height","imgHeight","parseInt","readAsDataURL","setState","renderMap","result","msg","url","sampleImg","current","fetch","then","response","blob","includes","catch","error","body","toDataURL","a","createElement","href","download","appendChild","click","setup","raster","Raster","mapLayer","Layer","activate","Shape","Rectangle","x","y","fillColor","colorBg","onLoad","imgRatio","mapRasterWidth","sampleEndX","sampleStartX","mapRasterHeight","sampleEndY","sampleStartY","mapRaster","getSubRaster","visible","Size","getPixel","renderGrid","componentDidUpdate","gridLine","gridLayer","dashStroke","Path","Line","Point","strokeWidth","dashArray","strokeColor","colorMainGrid","colorGrid","locked","meridianMark","PointText","colorGridMark","fontSize","content","String","fromCharCode","fontWeight","j","parallelMark","closest","getAttribute","clearBrushHover","clearNotBuiltItem","point","layers","buildLayer","children","itemSet","deletBtn","opacity","drawLayer","drawTool","Tool","thisTool","refPointDist","activeLayer","brush","hideDist","brushSquare","onMouseMove","position","onMouseDown","isEditableArea","draw","onMouseDrag","testPoint","drawRect","hitResult","hitTest","fill","Math","floor","random","length","isBuild","isEdit","buildTool","buildPath","baseBlock","buildItem","thisItem","rotate","replace","strokeColorBilding","Group","Circle","strokeColorPlant","addChild","buildImage","importSVG","scale","bounds","_height","deletBtnBg","center","_width","radius","deletBtnIcon","getSnapPoint","built","tolerance","parent","onMouseUp","blur","isX","lastBuild","ref","Translation","t","title","openModal","closeModal","accept","htmlFor","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.11897873.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.5da2d115.jpg\";","const toolData = new Map([\n  ['draw', {\n    'mode': 'draw',\n    'image': 'icon_draw.svg',\n    'tools': new Map([\n      ['brush-S', {\n        'tool': 'brush-S',\n        'image': 'icon_brush-S.svg',\n        'size': 1\n      }],\n      ['brush-M', {\n        'tool': 'brush-M',\n        'image': 'icon_brush-M.svg',\n        'size': 2\n      }],\n      ['brush-L', {\n        'tool': 'brush-L',\n        'image': 'icon_brush-L.svg',\n        'size': 3\n      }]\n    ]),\n    'colors': new Map([\n      ['colorG1', {\n        'colorName': 'colorG1',\n        'image': 'icon_colorG1.jpg',\n        'color': ['#3c783b', '#437c42', '#3d783c', '#417a40', '#458042']\n      }],\n      ['colorG2', {\n        'colorName': 'colorG2',\n        'image': 'icon_colorG2.jpg',\n        'color': ['#42a140', '#49a646', '#40a03e', '#44a63f', '#4fa544']\n      }],\n      ['colorG3', {\n        'colorName': 'colorG3',\n        'image': 'icon_colorG3.jpg',\n        'color': ['#5dc549', '#5fc647', '#5bc746', '#6ecd51', '#5cc746']\n      }],\n      ['colorSand', {\n        'colorName': 'colorSand',\n        'image': 'icon_colorSand.jpg',\n        'color': ['#f0e8a7', '#ece5a2', '#ede7a6', '#ebe6a1', '#eee8b4']\n      }],\n      ['colorWater', {\n        'colorName': 'colorWater',\n        'image': 'icon_colorWater.jpg',\n        'color': ['#78d4c3', '#7bd8c3', '#7dd9c0', '#79d6c1', '#76d5c3']\n      }], \n      ['colorRock', {\n        'colorName': 'colorRock',\n        'image': 'icon_colorRock.jpg',\n        'color': ['#6e7484', '#818793', '#6e7689', '#6f7684', '#747788']\n      }],\n      ['colorCustom', {\n        'colorName': 'colorCustom',\n        'image': 'icon_palette.svg',\n        'color': ['#b0a07c']\n      }]\n    ])\n  }],\n  ['build', {\n    'mode': 'build',\n    'image': 'icon_build.svg',\n    'tools': new Map([\n      ['building', {\n        'tool': 'building',\n        'image': 'icon_building.svg',\n        'color': '#544f40',\n        'items': new Map([\n          ['home', {\n            'item': 'home',\n            'image': 'icon_home.svg',\n            'size': [5, 4],\n            'color': '#f784ae'\n          }],\n          ['house', {\n            'item': 'house',\n            'image': 'icon_house.svg',\n            'size': [4, 4],\n            'color': '#f8b616'\n          }],\n          ['store', {\n            'item': 'store',\n            'image': 'icon_store.svg',\n            'size': [7, 4]\n          }],\n          ['apparel', {\n            'item': 'apparel',\n            'image': 'icon_apparel.svg',\n            'size': [5, 4]\n          }],\n          ['museum', {\n            'item': 'museum',\n            'image': 'icon_museum.svg',\n            'size': [7, 4]\n          }],\n          ['infoCenter', {\n            'item': 'infoCenter',\n            'image': 'icon_infoCenter.svg',\n            'size': [12, 10]\n          }],\n          ['camp', {\n            'item': 'camp',\n            'image': 'icon_camp.svg',\n            'size': [4, 4]\n          }],\n          ['airPort', {\n            'item': 'airPort',\n            'image': 'icon_airport.svg',\n            'size': [8, 8]\n          }]\n        ])\n      }],\n      ['bridge', {\n        'tool': 'bridge',\n        'image': 'icon_bridge.svg',\n        'color': '#847f64',\n        'items': new Map([\n          ['b0', {\n            'item': 'b0',\n            'image': 'icon_b0.svg',\n            'size': [4, 2]\n          }],\n          ['b90', {\n            'item': 'b90',\n            'image': 'icon_b90.svg',\n            'size': [2, 4]\n          }],\n          ['b45', {\n            'item': 'b45',\n            'image': 'icon_b45.svg',\n            'size': [6, 6]\n          }],\n          ['b135', {\n            'item': 'b135',\n            'image': 'icon_b135.svg',\n            'size': [6, 6]\n          }]\n        ])\n      }],\n      ['slope', {\n        'tool': 'slope',\n        'image': 'icon_slope.svg',\n        'color': '#edda96',\n        'items': new Map([\n          ['s0', {\n            'item': 's0',\n            'image': 'icon_s0.svg',\n            'size': [4, 2]\n          }],\n          ['s90', {\n            'item': 's90',\n            'image': 'icon_s90.svg',\n            'size': [2, 4]\n          }]\n        ])\n      }]\n    ])\n  }],\n  ['plant', {\n    'mode': 'plant',\n    'image': 'icon_plant.svg',\n    'tools': new Map([\n      ['tree', {\n        'tool': 'tree',\n        'image': 'icon_tree.svg',\n        'color': '#00b27a',\n        'size': [3, 3],\n        'items': new Map([\n          ['broadleaf', {\n            'item': 'broadleaf'\n          }],\n          ['conifer', {\n            'item': 'conifer',\n            'color': '#12560c'\n          }],\n          ['apple', {\n            'item': 'apple',\n            'image': 'icon_apple.svg'\n          }],\n          ['cherry', {\n            'item': 'cherry',\n            'image': 'icon_cherry.svg' \n          }],\n          ['coconut', {\n            'item': 'coconut',\n            'image': 'icon_coconut.svg'\n          }],\n          ['orange', {\n            'item': 'orange',\n            'image': 'icon_orange.svg'\n          }],\n          ['pear', {\n            'item': 'pear',\n            'image': 'icon_pear.svg'\n          }],\n          ['peach', {\n            'item': 'peach',\n            'image': 'icon_peach.svg'\n          }],\n          ['bamboo', {\n            'item': 'bamboo',\n            'image': 'icon_bamboo.svg',\n            'color': '#c7ea7b'\n          }]\n        ])\n      }],\n      ['flower', {\n        'tool': 'flower',\n        'image': 'icon_flower.svg',\n        'color': '#fff',\n        'size': [1, 1],\n        'items': new Map([\n          ['red', {\n            'item': 'red'\n          }],\n          ['yellow', {\n            'item': 'yellow'\n          }],\n          ['white', {\n            'item': 'white'\n          }],\n          ['orange', {\n            'item': 'orange'\n          }],\n          ['pink', {\n            'item': 'pink'\n          }],\n          ['purple', {\n            'item': 'purple'\n          }],\n          ['black', {\n            'item': 'black'\n          }],\n          ['blue', {\n            'item': 'blue'\n          }],\n        ])\n      }]\n    ])\n  }]\n]);\n\nexport { toolData };","import React from 'react';\n\nfunction MenuBtn(props) {\n  const id = props.data.mode || props.data.tool || props.data.item || props.data.colorName;\n  let className;\n  const isActive = props.isActive ? 'active' : '';\n  if (props.data.colorName) {\n    className = `color ${props.data.colorName} ${isActive}`;\n  }\n  else if (props.data.item) {\n    className = `item ${props.type} ${props.data.item} ${isActive}`;\n  }\n  else {\n    className = `${props.type} ${isActive}`;\n  }\n  if (props.data.image) {\n    if (id === 'colorCustom') {\n      return (\n        <button id={id} onClick={props.onClick} className={className}>\n          <label>\n            <input type='color' defaultValue={props.customColor} onChange={props.changeColor} />\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </label>\n        </button>\n      )\n    }\n    else {\n      if (props.type === 'tree') {\n        const colorStyle = {background: props.data.color};\n        return (\n          <button id={id} onClick={props.onClick} className={className} style={colorStyle}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n      else {\n        return (\n          <button id={id} onClick={props.onClick} className={className}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n    }\n  }\n  else {\n    let color;\n    if (props.type === 'flower') {\n      color = props.data.item;\n    }\n    else {\n      color = props.data.color;\n    }\n    const colorStyle = {background: color};\n    return (\n      <button id={id} onClick={props.onClick} className={className}>\n        <div className=\"colorBlock\" style={colorStyle}></div>\n      </button>\n    )\n  }\n}\n\nexport default MenuBtn;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuModes(props) {\n  const toolData = [...props.toolData];\n  const listItems = toolData.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool[1]} type='mode' isActive={props.currentMode === tool[1].mode} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nexport default MenuModes;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuTools(props) {\n  const listItems = [...props.currentModeData.tools].map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool[1]} type='tool' isActive={props.currentTool === tool[1].tool} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nexport default MenuTools;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuItems(props) {\n  let menuItems, compareTarget;\n  const type = props.currentTool;\n  if (props.currentMode === 'draw') {\n    menuItems = [...props.currentModeData.colors];\n    compareTarget = 'colorName';\n  }\n  else {\n    menuItems = [...props.currentModeData.tools.get(props.currentTool).items];\n    compareTarget = 'item';\n  }\n  const listItems = menuItems.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool[1]} type={type} isActive={tool[1][compareTarget] === props.currentItem} onClick={props.onClick} customColor={props.customColor} changeColor={props.changeColor} />\n    </li>\n  );\n  return (\n    <div className=\"menuItems\">\n      <hr />\n      <ul>\n        {listItems}\n      </ul>\n    </div>\n  )\n}\n\nexport default MenuItems;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  'zh-TW': {\n    translation: {\n      'This is a simple tool for Animal Crossing': '這是一個給懶人用的《集合啦！動物森友會》島嶼規劃工具。',\n      'Upload your map screenshot to start': '上傳你擷取的島嶼地圖畫面（如下圖）即可開始，',\n      'or you can': '也可以',\n      'try with my map': '先用我的地圖試試看',\n      'period': '。',\n      'This is for desktop browser': '（建議於桌面版瀏覽器中使用，在行動裝置中可能無法正常操作。）',\n\n      'Upload image': '上傳圖檔',\n      'or': '或',\n      'Use the URL of uploaded image': '使用已上傳的圖片連結：',\n      'Confirm': '確定',\n      'Sorry this seems not a correct map image': '抱歉，這好像不是正確的地圖截圖故無法使用。解析度應為 1280 x 720 px。',\n      'Sorry this seems not a correct map image url': '抱歉，這好像不是正確的地圖截圖連結。可在圖片上按右鍵「複製圖片位址」再貼上。',\n      'Sorry can not get image from URL': '抱歉，此圖片無法經由連結取得，請先下載再用上傳的方式使用。',\n\n      'info': '說明頁',\n      'download map': '下載地圖',\n\n      'This is a very simple tool': '這是個功能非常陽春的懶人工具，',\n      'No undo': '沒有回復功能，只能重新整理回到開始畫面讀取檔案從頭再來；',\n      'No save': '也不能儲存編輯到一半的狀態，只能把成品下載成圖檔。',\n      'You can try other great tools': '如果你覺得這個破工具很難用，可以試試看其他專業開發者做的高級工具：',\n      'Close': '關閉'\n    }\n  },\n  'en': {\n    translation: {\n      'This is a simple tool for Animal Crossing': 'This is a simple island planning tool for \"Animal Crossing: New Horizons.\"',\n      'Upload your map screenshot to start': 'Upload the screenshot of your island map (like the image below）to start, ',\n      'or you can': 'or you can ',\n      'try with my map': 'try with my map',\n      'period': '.',\n      'This is for desktop browser': '(Strongly recommend to open in desktop browser. Might be very buggy in mobile browser.)',\n\n      'Upload image': 'Upload image',\n      'or': 'Or',\n      'Use the URL of uploaded image': 'Use the URL of your uploaded image:',\n      'Confirm': 'Confirm',\n      'Sorry this seems not a correct map image': 'Sorry, this seems not a correct map image. The resolution should be 1280 x 720 px.',\n      'Sorry this seems not a correct map image url': 'Sorry, this seems not a correct map image URL. You can right click the image then \"Copy Image Address.\"',\n      'Sorry can not get image from URL': 'Sorry, this image can\\'t be processed through URL, please download the image then use \"Upload image.\"',\n\n      'Info': 'Info',\n      'Download map': 'Download map',\n\n      'This is a very simple tool': 'This is a very simple tool. ',\n      'No undo': '\"No undo feature.\" You can only reload the page and start from the beginning. ',\n      'No save': 'Also, \"No save feature.\" You can only download the image file.',\n      'You can try other great tools': 'If this tool is too lame for you, you can try these great tools that made by skilled developers:',\n      'Close': 'Close'\n    }\n  },\n  'ja': {\n    translation: {\n      'This is a simple tool for Animal Crossing': 'これはシンプルな「あつまれ どうぶつの森」の島の構想ツールです。',\n      'Upload your map screenshot to start': '自分の島のスクリーンショット（下図のような）をアップロードして始めてください。',\n      'or you can': '',\n      'try with my map': '下図を使って体験したい人はこちら',\n      'period': '。',\n      'This is for desktop browser': '（デスクトップブラウザ向け。モバイルブラウザでは使えない可能性が高いです。）',\n\n      'Upload image': 'アップロード',\n      'or': 'または',\n      'Use the URL of uploaded image': 'SNSに投稿した画像のURLを使用：',\n      'Confirm': '確定',\n      'Sorry this seems not a correct map image': 'すみません、これは正しいスクリーンショットではなさそうです。ご利用可能な画像サイズは 1280 x 720 ピクセルとなります。',\n      'Sorry this seems not a correct map image url': 'すみません、これは正しいURLではなさそうです。画像を右クリックして、「画像のURLをコピー」をしてください。',\n      'Sorry can not get image from URL': 'すみません、この画像はURLから読み込めません。一回ダウンロードして、「アップロード」を使ってください。',\n\n      'info': '説明',\n      'download map': '地図をダウンロード',\n\n      'This is a very simple tool': 'これはとてもシンプルなツールです。',\n      'No undo': '元に戻す機能がありません。リロードして最初からやり直すしかできません。',\n      'No save': 'セーブ機能もありません。画像のダウンロードしかできません。',\n      'You can try other great tools': 'もしより本格的なツールを使いたいなら、優秀な開発者が作ったこちらのツールを試してみてください：',\n      'Close': '閉じる'\n    }\n  }\n};\n\ni18n\n  // detect user language\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport paper from 'paper';\nimport setting from './setting.json';\nimport { toolData } from './toolData.js';\nimport MenuModes from './MenuModes.js';\nimport MenuTools from './MenuTools.js';\nimport MenuItems from './MenuItems.js';\nimport sampleImg from './img/test.jpg';\nimport i18n from \"i18next\";\nimport { Translation } from 'react-i18next';\nimport './i18n';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.urlInput = React.createRef();\n    this.upLoadImg = this.upLoadImg.bind(this);\n    this.loadMapFromUrl = this.loadMapFromUrl.bind(this);\n    this.downLoadCanvas = this.downLoadCanvas.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.changeTool = this.changeTool.bind(this);\n    this.changeItem = this.changeItem.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.state = {\n      language: i18n.language,\n      isImgUploaded: false,\n      canvasSizeX: setting.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding * 2,\n      canvasSizeY: setting.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 2,\n      squareSize: setting.squareSize,\n      currentMode: [...toolData][0][0],\n      currentModeData: [...toolData][0][1],\n      currentTool: [...[...toolData][0][1].tools][0][0],\n      currentItem: [...[...toolData][0][1].colors][0][0],\n      customColor: [...[...toolData][0][1].colors][[...toolData][0][1].colors.size - 1][1].color[0]\n    };\n  }\n  changeLanguage(e) {\n    e.target.parentElement.querySelectorAll('button').forEach((btn)=>{\n      btn.classList.remove('active');\n    });\n    \n    e.target.classList.add('active');\n    i18n.changeLanguage(e.target.name);\n  }\n  componentDidUpdate(prevProps) {\n    if (paper.project) {\n      if (this.state.currentMode === 'draw') {\n        this.handleDraw();\n      }\n      else if (this.state.currentMode === 'build' || this.state.currentMode === 'plant') {\n        this.handleBuildAndPlant();\n      }\n    }\n  }\n  upLoadImg(e) {\n    const label = e.target.nextElementSibling;\n    const labelVal = label.innerHTML;\n\t\tlet fileName = '';\n\t\tfileName = e.target.value.split('\\\\').pop();\n\t\tif (fileName) {\n      label.innerHTML = fileName;\n    }\n\t\telse {\n      label.innerHTML = labelVal;\n    }\n    const uploadImg = e.target.files[0];\n    const reader = new FileReader();\n    const that = this;\n    if (uploadImg) {\n      const img = new Image();\n      img.src = window.URL.createObjectURL(uploadImg);\n      img.addEventListener('load', () => {\n        const errorMessageDiv = document.getElementById('img-input-error');\n        if ((img.width !== setting.imgWidth || img.height !== setting.imgHeight) && (parseInt(img.width / img.height * 1000) !== parseInt(setting.imgWidth / setting.imgHeight * 1000)))  {\n          errorMessageDiv.classList.add('active');\n          return false;\n        }\n        else {\n          reader.readAsDataURL(uploadImg);\n        }\n      });\n    }\n    reader.addEventListener(\"load\", function () {\n      that.setState({\n        isImgUploaded: true\n      });\n      that.renderMap(reader.result);\n    }, false);\n  }\n  loadMapFromUrl(e) {\n    document.querySelectorAll('.error-message').forEach((msg) => {\n      msg.classList.remove('active');\n    });\n    const that = this;\n    let url;\n    if (e.target.id === 'mapUseDefault') {\n      url = sampleImg;\n    }\n    else {\n      url = this.urlInput.current.value;\n    }\n    fetch(url)\n    .then(function(response) {\n      return response.blob()\n    })\n    .then(function(blob) {\n      if (!blob.type.includes('image/jpeg')) {\n        const errorMessageDiv = document.getElementById('url-error');\n        errorMessageDiv.classList.add('active');\n      }\n      else {\n        const img = new Image();\n        img.src = url;\n        img.addEventListener('load', () => {\n          const errorMessageDiv = document.getElementById('url-error');\n          if ((img.width !== setting.imgWidth || img.height !== setting.imgHeight) && (parseInt(img.width / img.height * 1000) !== parseInt(setting.imgWidth / setting.imgHeight * 1000))) {\n            errorMessageDiv.classList.add('active');\n            return false;\n          }\n          else {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.addEventListener(\"load\", function () {\n              that.setState({\n                isImgUploaded: true\n              });\n              that.renderMap(reader.result);\n            }, false);\n          }\n        });\n      }\n    })\n    .catch(function(error) {\n      const errorMessageDiv = document.getElementById('url-fetch-error');\n      errorMessageDiv.classList.add('active');\n    });\n  }\n  openModal() {\n    document.body.classList.add(\"modal-open\");\n  }\n  closeModal() {\n    document.body.classList.remove(\"modal-open\");\n  }\n  downLoadCanvas() {\n    const canvas = this.canvas.current;\n    const img = canvas.toDataURL('image/jpg');\n    let a = document.createElement('a');\n    a.href = img;\n    a.download = 'myIslandImg.jpg';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  }\n  renderMap(url) {\n    const canvas = this.canvas.current;\n    canvas.width = this.state.canvasSizeX;\n    canvas.height = this.state.canvasSizeY;\n    paper.setup(canvas);\n    let raster = new paper.Raster(url);\n    const mapLayer = new paper.Layer();\n    mapLayer.name = 'mapLayer';\n    const drawLayer = new paper.Layer();\n    drawLayer.name = 'drawLayer';\n    const buildLayer = new paper.Layer();\n    buildLayer.name = 'buildLayer';\n    mapLayer.activate();\n    const bgRect = new paper.Shape.Rectangle({\n      x: 0,\n      y: 0,\n      width: this.state.canvasSizeX,\n      height: this.state.canvasSizeY,\n    });\n    bgRect.fillColor = setting.colorBg;\n    raster.onLoad = () => {\n      let imgRatio = 1;\n      if (raster.width !== setting.imgWidth) {\n        imgRatio = raster.width / setting.imgWidth;\n      }\n      mapLayer.activate();\n      const mapRasterWidth = setting.sampleEndX * imgRatio - setting.sampleStartX * imgRatio;\n      const mapRasterHeight = setting.sampleEndY * imgRatio - setting.sampleStartY * imgRatio;\n      const mapRaster = raster.getSubRaster(new paper.Rectangle(setting.sampleStartX * imgRatio, setting.sampleStartY * imgRatio, mapRasterWidth, mapRasterHeight));\n      raster.remove();\n      mapRaster.visible = false;\n      mapRaster.size = new paper.Size(setting.squarePerBlock * setting.mapXBlock, setting.squarePerBlock * setting.mapYBlock);\n      for (let y = 0; y < mapRaster.height; y++) {\n        for(let x = 0; x < mapRaster.width; x++) {\n          const color = mapRaster.getPixel(x, y);\n          const pixelRect = new paper.Shape.Rectangle({\n            x: x * this.state.squareSize + setting.mapPadding, \n            y: y * this.state.squareSize + setting.mapPadding,\n            width: this.state.squareSize,\n            height: this.state.squareSize\n          });\n          pixelRect.fillColor = color;\n        }\n      }\n    }\n    this.renderGrid();\n    this.componentDidUpdate();\n  }\n  renderGrid() {\n    const gridLayer = new paper.Layer();\n    gridLayer.name = 'gridLayer';\n    gridLayer.activate();\n    let gridLine;\n    const dashStroke = [this.state.squareSize + 5, this.state.squareSize - 2]\n    for(let x = 0; x <= setting.squarePerBlock * setting.mapXBlock; x++) {\n      if (x % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, 0), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, setting.mapPadding), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY - setting.mapPadding));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for(let y = 0; y <= setting.squarePerBlock * setting.mapYBlock; y++) {\n      if (y % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(0, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX - setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for (let i = 0; i < setting.mapYBlock; i++) {\n      const meridianMark = new paper.PointText(new paper.Point(setting.mapPadding / 5, this.state.squareSize * setting.squarePerBlock * (i + 0.5) + setting.mapPadding ));\n      meridianMark.fillColor = setting.colorGridMark;\n      meridianMark.fontSize = this.state.squareSize * 2;\n      meridianMark.content = String.fromCharCode(65 + i);\n      meridianMark.fontWeight = 'bold';\n    }\n    for (let j = 0; j < setting.mapXBlock; j++) {\n      let parallelMark = new paper.PointText(new paper.Point(this.state.squareSize * setting.squarePerBlock * (j + 0.5) + setting.mapPadding, this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 1.8));\n      parallelMark.fillColor = setting.colorGridMark;\n      parallelMark.fontSize = this.state.squareSize * 2;\n      parallelMark.content = j + 1;\n      parallelMark.fontWeight = 'bold';\n    }\n  }\n  changeMode(e) {\n    const target = e.target.closest('button');\n    const currentMode = target.getAttribute('id');\n    const currentModeData = toolData.get(currentMode);\n    let currentItem;\n    if (currentMode === 'draw') {\n      currentItem = [...currentModeData.colors][0][0];\n    }\n    else {\n      currentItem = null;\n    }\n    this.setState({\n      currentMode: currentMode,\n      currentModeData: currentModeData,\n      currentTool: [...currentModeData.tools][0][0],\n      currentItem: currentItem\n    });\n    this.clearBrushHover();\n    this.clearNotBuiltItem();\n  }\n  changeTool(e) {\n    const target = e.target.closest('button');\n    const currentTool = target.getAttribute('id');\n    let currentItem = this.state.currentItem;\n    if (this.state.currentMode !== 'draw') {\n      currentItem = [...this.state.currentModeData.tools.get(currentTool).items][0][0];\n    }\n    this.setState({\n      currentTool: currentTool,\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeItem(e) {\n    const target = e.target.closest('button');\n    const currentItem = target.getAttribute('id');\n    this.setState({\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeColor(e) {\n    this.setState({\n      customColor: e.target.value\n    });\n  }\n  isEditableArea(point) {\n    if (point.x > setting.mapPadding && point.x < this.state.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding && point.y > setting.mapPadding && point.y < this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  handleDraw() {\n    paper.project.layers.buildLayer.children.forEach((itemSet)=>{\n      itemSet.children.deletBtn.opacity = 0;\n    });\n    paper.project.layers.drawLayer.activate();\n    const drawTool = new paper.Tool();\n    drawTool.activate();\n    let size, colors;\n    const thisTool = this.state.currentModeData.tools.get(this.state.currentTool);\n    size = thisTool.size ? thisTool.size : 0;\n    if (this.state.currentItem === 'colorCustom') {\n      colors = [this.state.customColor];\n    }\n    else {\n      colors = this.state.currentModeData.colors.get(this.state.currentItem).color;\n    }\n    const refPointDist = (size - 1) * setting.squareSize;\n\n    if (!paper.project.activeLayer.children.brush) {\n      let brush = new paper.Shape.Rectangle({\n        x: setting.hideDist * -1, \n        y: setting.hideDist * -1,\n        width: size * this.state.squareSize,\n        height: size * this.state.squareSize\n      });\n      brush.fillColor = 'rgba(255,255,255,0.1)';\n      brush.strokeColor = 'rgba(255,255,255,0.8)';\n      brush.name = 'brush';\n    }\n    else {\n      if (paper.project.activeLayer.children.brush.width / this.state.squareSize !== size) {\n        paper.project.activeLayer.children.brush.remove();\n        let brush = new paper.Shape.Rectangle({\n          x: setting.hideDist * -1, \n          y: setting.hideDist * -1,\n          width: size * this.state.squareSize,\n          height: size * this.state.squareSize\n        });\n        brush.fillColor = 'rgba(255,255,255,0.1)';\n        brush.strokeColor = 'rgba(255,255,255,0.8)';\n        brush.name = 'brush';\n      }\n    }\n    const brushSquare = paper.project.activeLayer.children.brush;\n    drawTool.onMouseMove = (e) => {\n      let point = new paper.Point();\n      point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      brushSquare.position = point;\n    }\n    drawTool.onMouseDown = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n    drawTool.onMouseDrag = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n  }\n  draw(e, size, refPointDist, colors) {\n    paper.project.layers.drawLayer.activate();\n    let point = new paper.Point(0, 0);\n    let testPoint = new paper.Point(0, 0);\n    const brushSquare = paper.project.activeLayer.children.brush;\n    point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist;\n    point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist;\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        const drawRect = new paper.Shape.Rectangle({\n          x: point.x + i * this.state.squareSize, \n          y: point.y + j * this.state.squareSize,\n          width: this.state.squareSize,\n          height: this.state.squareSize\n        });\n        brushSquare.position = [point.x + size * this.state.squareSize / 2, point.y + size * this.state.squareSize / 2];\n        testPoint.x = point.x + i * this.state.squareSize + this.state.squareSize / 2;\n        testPoint.y = point.y + j * this.state.squareSize + this.state.squareSize / 2;\n        let hitResult = paper.project.layers[2].hitTest(testPoint, {            \n          fill: true\n        });\n        if (hitResult && hitResult.item.name !== 'brush') {\n          hitResult.item.remove();\n        }\n        drawRect.fillColor = colors[Math.floor(Math.random() * colors.length)];\n      }\n    }\n  }\n  handleBuildAndPlant() {\n    paper.project.layers.buildLayer.activate();\n    const buildTool = new paper.Tool();\n    buildTool.activate();\n    let isBuild, isEdit, itemSet;\n    if (this.state.currentItem) {\n      let size;\n      isBuild = true;\n      isEdit = false;\n      let buildPath;\n      let baseBlock;\n      let buildItem;\n      const currentTool = this.state.currentTool;\n      const thisTool = this.state.currentModeData.tools.get(currentTool);\n      const thisItem = thisTool.items.get(this.state.currentItem);\n      if (this.state.currentMode === 'build') {\n        size = thisItem.size;\n        buildPath = new paper.Shape.Rectangle({\n          x: 0, \n          y: 0,\n          width: size[0] * this.state.squareSize,\n          height: size[1] * this.state.squareSize\n        });\n\n        // oblique bridge\n        if (this.state.currentItem === 'b45' || this.state.currentItem === 'b135') {\n          buildPath.size = [2 * this.state.squareSize, 4 * this.state.squareSize];\n          buildPath.rotate(parseInt(this.state.currentItem.replace('b', '')));\n        }\n        buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n        buildPath.strokeColor = setting.strokeColorBilding;\n        buildItem = new paper.Group([buildPath]);\n      }\n      else if (this.state.currentMode === 'plant') {\n        size = thisTool.size;\n        baseBlock = new paper.Shape.Rectangle({\n          x: 0, \n          y: 0,\n          width: size[0] * this.state.squareSize,\n          height: size[1] * this.state.squareSize\n        });\n        buildItem = new paper.Group([baseBlock]);\n\n        if (this.state.currentTool === 'tree') {\n          buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize * 0.7 / 2);\n          buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n          buildPath.strokeColor = setting.strokeColorPlant;\n          buildPath.opacity = 0.5;\n        }\n        else if (this.state.currentTool === 'flower') {\n          buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize / 2);\n          buildPath.fillColor = thisItem.item;\n          buildPath.strokeColor = setting.strokeColorPlant;\n        }\n        buildItem.addChild(buildPath);\n      }\n      \n      // add img\n      if (thisItem.image && (thisTool.tool !== 'bridge' && thisTool.tool !== 'slope')) {\n        const buildImage = new paper.Group();\n        const that = this;\n        buildImage.importSVG(process.env.PUBLIC_URL + '/' + thisItem.image, function(item) {\n          const squareSize = that.state.squareSize;\n          const imageSizeSquare = currentTool === 'tree' ? 1 : 2.8;\n          const scale =  squareSize * imageSizeSquare / buildImage.bounds.size._height;\n          buildImage.scale(scale);\n          buildImage.position = buildItem.position;\n          buildImage.locked = true;\n          buildItem.addChild(buildImage);\n        });\n      }\n      let deletBtnBg = new paper.Shape.Circle({\n        center: [buildItem.bounds.size._width, 0], \n        radius: this.state.squareSize * 0.8\n      });\n      deletBtnBg.fillColor = '#555';\n      let deletBtnIcon = new paper.PointText(new paper.Point(buildItem.bounds.size._width - (this.state.squareSize * 1.6 - 6) / 2, (this.state.squareSize * 1.6 - 6) / 2));\n      deletBtnIcon.fillColor = '#eee';\n      deletBtnIcon.content = '×';\n      deletBtnIcon.locked = true;\n      let deletBtn = new paper.Group([deletBtnBg, deletBtnIcon]);\n      deletBtn.name = 'deletBtn';\n      deletBtn.opacity = 0;\n      deletBtn.locked = true;\n      itemSet = new paper.Group([buildItem, deletBtn]);\n      itemSet.position = [setting.hideDist * -1, setting.hideDist * -1];\n    }\n    else {\n      isBuild = false;\n      isEdit = true;\n    }\n    buildTool.onMouseMove = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseDown = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n        isBuild = false;\n        itemSet.data.built = true;\n      }\n      else {\n        paper.project.activeLayer.children.forEach((itemSet) => {\n          itemSet.children.deletBtn.opacity = 0;\n        });\n        const hitResult = paper.project.layers.buildLayer.hitTest(e.point, {\n          fill: true,\n          tolerance: 1\n        });\n        if (!hitResult) {\n          isEdit = false;\n          return;\n        }\n        else {\n          if (!(hitResult.item.parent.name === 'deletBtn')) {\n            itemSet = hitResult.item.parent.parent;\n            isEdit = true;\n            itemSet.children.deletBtn.opacity = 1;\n            itemSet.children.deletBtn.locked = false;\n          }\n          else {\n            hitResult.item.parent.parent.remove();\n            itemSet = null;\n          }\n        }\n      }\n    }\n    buildTool.onMouseDrag = (e) => {\n      if (isEdit && itemSet) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseUp = (e) => {\n      this.setState({\n        currentItem: null\n      });\n      document.querySelectorAll('button.item').forEach(function(btn){\n        btn.blur();\n      });\n    }\n  }\n  getSnapPoint(point, isX, itemSet) {\n    let snapPoint;\n    if (isX) {\n      snapPoint = point - (point - itemSet.bounds._width / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    else {\n      snapPoint = point - (point - itemSet.bounds._height / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    return snapPoint;\n  }\n  clearBrushHover() {\n    if (paper.project.layers.drawLayer.children.brush) {\n      paper.project.layers.drawLayer.children.brush.remove();\n    }\n  }\n  clearNotBuiltItem() {\n    const lastBuild = paper.project.layers.buildLayer.children[paper.project.layers.buildLayer.children.length - 1];\n    if (lastBuild && !lastBuild.data.built) {\n      lastBuild.remove();\n    }\n  }\n  render() {\n    if (!this.state.isImgUploaded) {\n      return (\n        <div className='intro'>\n          <h1><div>Lazy Island Planner</div></h1>\n          <div className='lang-menu'>\n            <button name='zh-TW' className={(this.state.language === 'zh-TW' || this.state.language === 'zh') ? 'active' : ''} onClick={this.changeLanguage}>台灣華語</button>\n            <button name='en' className={(this.state.language !== 'zh-TW' && this.state.language !== 'zh' && this.state.language !== 'ja') ? 'active' : ''} onClick={this.changeLanguage}>English</button>\n            <button name='ja' className={this.state.language === 'ja' ? 'active' : ''} onClick={this.changeLanguage}>日本語</button>\n          </div>\n          <Translation>\n            {(t, { i18n }) => \n              <div>\n                <p>{t('This is a simple tool for Animal Crossing')}</p>\n                <p>{t('Upload your map screenshot to start')}{t('or you can')}<button className='link' id='mapUseDefault' onClick={this.loadMapFromUrl}>{t('try with my map')}</button>{t('period')}</p>\n                <p>{t('This is for desktop browser')}</p>\n              </div>\n            }\n          </Translation>\n          <img src={sampleImg} alt='Map sample' className='island-map' />\n          <Translation>\n            {(t, { i18n }) => \n              <form>\n                <input type='file' accept='image/.jpg, .jpeg' id='img-input' onChange={this.upLoadImg} />\n                <label htmlFor='img-input' className='btn fake-input'>{t('Upload image')}</label>\n                <div id='img-input-error' className='error-message'>{t('Sorry this seems not a correct map image')}</div>\n                <div className='or'>{t('or')}</div>\n                <div className='use-url'>\n                  <label>{t('Use the URL of uploaded image')}</label>\n                  <input type='text' ref={this.urlInput}  /> \n                  <button type='button' id='mapFromUrl' onClick={this.loadMapFromUrl}>{t('Confirm')}</button>\n                </div>\n                <div id='url-error' className='error-message'>{t('Sorry this seems not a correct map image url')}</div>\n                <div id='url-fetch-error' className='error-message'>{t('Sorry can not get image from URL')}</div>\n              </form>\n            }\n          </Translation>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className='wrapper'>\n          <div className='editor'>\n            <aside className='tool-aside'>\n              <div className='modes'>\n                <MenuModes toolData={toolData} currentMode = {this.state.currentMode} onClick={this.changeMode} />\n              </div>\n              \n              <div className='tools'>\n                <MenuTools currentTool={this.state.currentTool} currentModeData={this.state.currentModeData} onClick={this.changeTool} />\n                <MenuItems currentMode={this.state.currentMode} currentModeData={this.state.currentModeData} currentTool={this.state.currentTool} currentItem={this.state.currentItem} onClick={this.changeItem} customColor={this.state.customColor} changeColor={this.changeColor} /> \n              </div>\n            </aside>\n            <canvas id='canvas' ref={this.canvas}>\n            </canvas>\n            <aside className='sub-aside'>\n              <Translation>\n                {(t, { i18n }) => \n                  <ul>\n                    <li>\n                      <button type='button' title={t('Info')} onClick={this.openModal}>\n                        <img src={process.env.PUBLIC_URL + '/icon_question.svg'} alt={t('Info')} />\n                      </button>\n                    </li>\n                    <li>\n                      <button type='button' title={t('Download map')} onClick={this.downLoadCanvas}>\n                        <img src={process.env.PUBLIC_URL + '/icon_download.svg'} alt={t('Download map')} />\n                      </button>\n                    </li>\n                  </ul>\n                }\n              </Translation>\n            </aside>\n          </div>\n          <Translation>\n            {(t, { i18n }) => \n              <div id='info-modal'>\n                <button className='close-modal round' onClick={this.closeModal}>×</button>\n                <h1><div>Lazy Island Planner</div></h1>\n                <p>{t('This is a very simple tool')}<strong>{t('No undo')}{t('No save')}</strong></p>\n                <p>{t('You can try other great tools')}</p>\n                <ul>\n                  <li>\n                    <a href='https://eugeneration.github.io/HappyIslandDesigner/' target='_blank'>Happy Island Designer</a>\n                  </li>\n                  <li>\n                    <a href='https://bobacupcake.itch.io/island-planner' target='_blank'>Island Planner</a>\n                  </li>\n                </ul>\n                <button className='btn close-modal' onClick={this.closeModal}>{t('Close')}</button>\n              </div>\n            }\n          </Translation>\n        </div>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
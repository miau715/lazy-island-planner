{"version":3,"sources":["img/test.jpg","MenuBtn.js","MenuModes.js","MenuTools.js","MenuItems.js","i18n.js","index.js"],"names":["module","exports","MenuBtn","props","className","id","data","mode","tool","item","colorName","isActive","type","image","onClick","defaultValue","customColor","onChange","changeColor","alt","src","process","colorStyle","background","color","style","MenuModes","listItems","toolData","map","i","key","currentMode","MenuTools","currentModeData","tools","currentTool","MenuItems","menuItems","compareTarget","colors","find","items","currentItem","i18n","use","LanguageDetector","initReactI18next","init","resources","translation","fallbackLng","keySeparator","interpolation","escapeValue","App","canvas","React","createRef","urlInput","upLoadImg","bind","loadMapFromUrl","downLoadCanvas","changeMode","changeTool","changeItem","state","language","isImgUploaded","canvasSizeX","setting","squareSize","squarePerBlock","mapXBlock","mapPadding","canvasSizeY","mapYBlock","length","e","target","parentElement","querySelectorAll","forEach","btn","classList","remove","add","changeLanguage","name","prevProps","paper","project","this","handleDraw","handleBuildAndPlant","fileName","label","nextElementSibling","labelVal","innerHTML","value","split","pop","uploadImg","files","reader","FileReader","that","img","Image","window","URL","createObjectURL","addEventListener","errorMessageDiv","document","getElementById","width","imgWidth","height","imgHeight","readAsDataURL","setState","renderMap","result","msg","url","sampleImg","current","fetch","then","response","blob","includes","catch","error","body","toDataURL","a","createElement","href","download","appendChild","click","setup","raster","Raster","mapLayer","Layer","activate","Shape","Rectangle","x","y","fillColor","colorBg","onLoad","mapRasterWidth","sampleEndX","sampleStartX","mapRasterHeight","sampleEndY","sampleStartY","mapRaster","getSubRaster","visible","size","Size","getPixel","renderGrid","componentDidUpdate","gridLine","gridLayer","dashStroke","Path","Line","Point","strokeWidth","dashArray","strokeColor","colorMainGrid","colorGrid","locked","meridianMark","PointText","colorGridMark","fontSize","content","String","fromCharCode","fontWeight","j","parallelMark","closest","getAttribute","clearBrushHover","clearNotBuiltItem","point","layers","buildLayer","children","itemSet","deletBtn","opacity","drawLayer","drawTool","Tool","thisTool","thisColors","refPointDist","activeLayer","brush","hideDist","brushSquare","onMouseMove","position","onMouseDown","isEditableArea","draw","onMouseDrag","testPoint","drawRect","hitResult","hitTest","fill","Math","floor","random","buildTool","buildPath","baseBlock","buildItem","isBuild","isEdit","thisItem","rotate","parseInt","replace","strokeColorBilding","Group","Circle","strokeColorPlant","addChild","buildImage","importSVG","scale","bounds","_height","deletBtnBg","center","_width","radius","deletBtnIcon","getSnapPoint","built","tolerance","parent","onMouseUp","blur","isX","lastBuild","ref","Translation","t","title","openModal","closeModal","accept","htmlFor","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.dc6386d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.5da2d115.jpg\";","import React from 'react';\n\nfunction MenuBtn(props) {\n  const id = props.data.mode || props.data.tool || props.data.item || props.data.colorName;\n  let className;\n  const isActive = props.isActive ? 'active' : '';\n  if (props.data.colorName) {\n    className = `color ${props.data.colorName} ${isActive}`;\n  }\n  else if (props.data.item) {\n    className = `item ${props.type} ${props.data.item} ${isActive}`;\n  }\n  else {\n    className = `${props.type} ${isActive}`;\n  }\n  if (props.data.image) {\n    if (id === 'colorCustom') {\n      return (\n        <button id={id} onClick={props.onClick} className={className}>\n          <label>\n            <input type='color' defaultValue={props.customColor} onChange={props.changeColor} />\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </label>\n        </button>\n      )\n    }\n    else {\n      if (props.type === 'tree') {\n        const colorStyle = {background: props.data.color};\n        return (\n          <button id={id} onClick={props.onClick} className={className} style={colorStyle}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n      else {\n        return (\n          <button id={id} onClick={props.onClick} className={className}>\n            <img alt={id} src={process.env.PUBLIC_URL + '/' + props.data.image} />\n          </button>\n        )\n      }\n    }\n  }\n  else {\n    let color;\n    if (props.type === 'flower') {\n      color = props.data.item;\n    }\n    else {\n      color = props.data.color;\n    }\n    const colorStyle = {background: color};\n    return (\n      <button id={id} onClick={props.onClick} className={className}>\n        <div className=\"colorBlock\" style={colorStyle}></div>\n      </button>\n    )\n  }\n}\n\nexport default MenuBtn;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuModes(props) {\n  const toolData = props.toolData;\n  const listItems = toolData.map((mode, i) =>\n    <li key={i}>\n      <MenuBtn data={mode} type='mode' isActive={props.currentMode === mode.mode} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nexport default MenuModes;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuTools(props) {\n  const listItems = props.currentModeData.tools.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool} type='tool' isActive={props.currentTool === tool.tool} onClick={props.onClick} />\n    </li>\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nexport default MenuTools;","import React from 'react';\nimport MenuBtn from './MenuBtn.js';\n\nfunction MenuItems(props) {\n  let menuItems, compareTarget;\n  const type = props.currentTool;\n  if (props.currentMode === 'draw') {\n    menuItems = props.currentModeData.colors;\n    compareTarget = 'colorName';\n  }\n  else {\n    const currentTool = props.currentModeData.tools.find((data) => {\n        if (data.tool === props.currentTool) {\n          return data;\n        }\n      },\n    );\n    menuItems = currentTool.items;\n    compareTarget = 'item';\n  }\n  const listItems = menuItems.map((tool, i) =>\n    <li key={i}>\n      <MenuBtn data={tool} type={type} isActive={tool[compareTarget] === props.currentItem} onClick={props.onClick} customColor={props.customColor} changeColor={props.changeColor} />\n    </li>\n  );\n  return (\n    <div className=\"menuItems\">\n      <hr />\n      <ul>\n        {listItems}\n      </ul>\n    </div>\n  )\n}\n\nexport default MenuItems;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  'zh-TW': {\n    translation: {\n      'This is a simple tool for Animal Crossing': '這是一個給懶人用的《集合啦！動物森友會》島嶼規劃工具。',\n      'Upload your map screenshot to start': '上傳你擷取的島嶼地圖畫面（如下圖）即可開始，',\n      'or you can': '也可以',\n      'try with my map': '先用我的地圖試試看',\n      'period': '。',\n      'This is for desktop browser': '（建議於桌面版瀏覽器中使用，在行動裝置中可能無法正常操作。）',\n\n      'Upload image': '上傳圖檔',\n      'or': '或',\n      'Use the URL of uploaded image': '使用已上傳的圖片連結：',\n      'Confirm': '確定',\n      'Sorry this seems not a correct map image': '抱歉，這好像不是正確的地圖截圖故無法使用。解析度應為 1280 x 720 px。',\n      'Sorry this seems not a correct map image url': '抱歉，這好像不是正確的地圖截圖連結。可在圖片上按右鍵「複製圖片位址」再貼上。',\n      'Sorry can not get image from URL': '抱歉，此圖片無法經由連結取得，請先下載再用上傳的方式使用。',\n\n      'info': '說明頁',\n      'download map': '下載地圖',\n\n      'This is a very simple tool': '這是個功能非常陽春的懶人工具，',\n      'No undo': '沒有回復功能，只能重新整理回到開始畫面讀取檔案從頭再來；',\n      'No save': '也不能儲存編輯到一半的狀態，只能把成品下載成圖檔。',\n      'You can try other great tools': '如果你覺得這個破工具很難用，可以試試看其他專業開發者做的高級工具：',\n      'Close': '關閉'\n    }\n  },\n  'en': {\n    translation: {\n      'This is a simple tool for Animal Crossing': 'This is a simple island planning tool for \"Animal Crossing: New Horizons.\"',\n      'Upload your map screenshot to start': 'Upload the screenshot of your island map (like the image below）to start, ',\n      'or you can': 'or you can ',\n      'try with my map': 'try with my map',\n      'period': '.',\n      'This is for desktop browser': '(Strongly recommend to open in desktop browser. Might be very buggy in mobile browser.)',\n\n      'Upload image': 'Upload image',\n      'or': 'Or',\n      'Use the URL of uploaded image': 'Use the URL of your uploaded image:',\n      'Confirm': 'Confirm',\n      'Sorry this seems not a correct map image': 'Sorry, this seems not a correct map image. The resolution should be 1280 x 720 px.',\n      'Sorry this seems not a correct map image url': 'Sorry, this seems not a correct map image URL. You can right click the image then \"Copy Image Address.\"',\n      'Sorry can not get image from URL': 'Sorry, this image can\\'t be processed through URL, please download the image then use \"Upload image.\"',\n\n      'Info': 'Info',\n      'Download map': 'Download map',\n\n      'This is a very simple tool': 'This is a very simple tool. ',\n      'No undo': '\"No undo feature.\" You can only reload the page and start from the beginning. ',\n      'No save': 'Also, \"No save feature.\" You can only download the image file.',\n      'You can try other great tools': 'If this tool is too lame for you, you can try these great tools that made by skilled developers:',\n      'Close': 'Close'\n    }\n  },\n  'ja': {\n    translation: {\n      'This is a simple tool for Animal Crossing': 'これはシンプルな「あつまれ どうぶつの森」の島の構想ツールです。',\n      'Upload your map screenshot to start': '自分の島のスクリーンショット（下図のような）をアップロードして始めてください。',\n      'or you can': '',\n      'try with my map': '下図を使って体験したい人はこちら',\n      'period': '。',\n      'This is for desktop browser': '（デスクトップブラウザ向け。モバイルブラウザの中に使えない可能性が高いです。）',\n\n      'Upload image': 'アップロード',\n      'or': 'または',\n      'Use the URL of uploaded image': 'SNSに投稿した画像のURLを使用：',\n      'Confirm': '確定',\n      'Sorry this seems not a correct map image': 'すみません、これは正しいスクリーンショットではなさそうです。ご利用可能な画像サイズは 1280 x 720 ピクセルとなります。',\n      'Sorry this seems not a correct map image url': 'すみません、これは正しいURLではなさそうです。画像を右クリックして、「画像のURLをコピー」をしてください。',\n      'Sorry can not get image from URL': 'すみません、この画像はURLから読み込めません。一回ダウンロードして、「アップロード」を使ってください。',\n\n      'info': '説明',\n      'download map': '地図をダウンロード',\n\n      'This is a very simple tool': 'これはとてもシンプルなツールです。',\n      'No undo': '元に戻す機能がありません。リロードして最初からやり直すしかできません。',\n      'No save': 'セーブ機能もありません。画像のダウンロードしかできません。',\n      'You can try other great tools': 'もしより本格的なツールを使いたいなら、優秀な開発者が作ったこちらのツールを試してみてください：',\n      'Close': '閉める'\n    }\n  }\n};\n\ni18n\n  // detect user language\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport paper from 'paper';\nimport setting from './setting.json';\nimport toolData from './toolData.json';\nimport MenuModes from './MenuModes.js';\nimport MenuTools from './MenuTools.js';\nimport MenuItems from './MenuItems.js';\nimport sampleImg from './img/test.jpg';\nimport i18n from \"i18next\";\nimport { Translation } from 'react-i18next';\nimport './i18n';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.urlInput = React.createRef();\n    this.upLoadImg = this.upLoadImg.bind(this);\n    this.loadMapFromUrl = this.loadMapFromUrl.bind(this);\n    this.downLoadCanvas = this.downLoadCanvas.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.changeTool = this.changeTool.bind(this);\n    this.changeItem = this.changeItem.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.state = {\n      language: i18n.language,\n      isImgUploaded: false,\n      canvasSizeX: setting.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding * 2,\n      canvasSizeY: setting.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 2,\n      squareSize: setting.squareSize,\n      currentMode: toolData.toolData[0].mode,\n      currentModeData: toolData.toolData[0],\n      currentTool: toolData.toolData[0].tools[0].tool,\n      currentItem: toolData.toolData[0].colors[0].colorName,\n      customColor: toolData.toolData[0].colors[toolData.toolData[0].colors.length - 1].color[0]\n    };\n  }\n  changeLanguage(e) {\n    e.target.parentElement.querySelectorAll('button').forEach((btn)=>{\n      btn.classList.remove('active');\n    });\n    \n    e.target.classList.add('active');\n    i18n.changeLanguage(e.target.name);\n  }\n  componentDidUpdate(prevProps) {\n    if (paper.project) {\n      if (this.state.currentMode === 'draw') {\n        this.handleDraw();\n      }\n      else if ((this.state.currentMode === 'build' || this.state.currentMode === 'plant') && this.state.currentItem) {\n        this.handleBuildAndPlant();\n      }\n    }\n  }\n  upLoadImg(e) {\n    const label = e.target.nextElementSibling;\n    const labelVal = label.innerHTML;\n\t\tlet fileName = '';\n\t\tfileName = e.target.value.split('\\\\').pop();\n\t\tif (fileName) {\n      label.innerHTML = fileName;\n    }\n\t\telse {\n      label.innerHTML = labelVal;\n    }\n    const uploadImg = e.target.files[0];\n    const reader = new FileReader();\n    const that = this;\n    if (uploadImg) {\n      const img = new Image();\n      img.src = window.URL.createObjectURL(uploadImg);\n      img.addEventListener('load', () => {\n        const errorMessageDiv = document.getElementById('img-input-error');\n        if (img.width !== setting.imgWidth || img.height !== setting.imgHeight) {\n          errorMessageDiv.classList.add('active');\n          return false;\n        }\n        else {\n          reader.readAsDataURL(uploadImg);\n        }\n      });\n    }\n    reader.addEventListener(\"load\", function () {\n      that.setState({\n        isImgUploaded: true\n      });\n      that.renderMap(reader.result);\n    }, false);\n  }\n  loadMapFromUrl(e) {\n    document.querySelectorAll('.error-message').forEach((msg) => {\n      msg.classList.remove('active');\n    });\n    const that = this;\n    let url;\n    if (e.target.id === 'mapUseDefault') {\n      url = sampleImg;\n    }\n    else {\n      url = this.urlInput.current.value;\n    }\n    fetch(url)\n    .then(function(response) {\n      return response.blob()\n    })\n    .then(function(blob) {\n      if (!blob.type.includes('image/jpeg')) {\n        const errorMessageDiv = document.getElementById('url-error');\n        errorMessageDiv.classList.add('active');\n      }\n      else {\n        const img = new Image();\n        img.src = url;\n        img.addEventListener('load', () => {\n          const errorMessageDiv = document.getElementById('url-error');\n          if (img.width !== setting.imgWidth || img.height !== setting.imgHeight) {\n            errorMessageDiv.classList.add('active');\n            return false;\n          }\n          else {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.addEventListener(\"load\", function () {\n              that.setState({\n                isImgUploaded: true\n              });\n              that.renderMap(reader.result);\n            }, false);\n          }\n        });\n      }\n    })\n    .catch(function(error) {\n      const errorMessageDiv = document.getElementById('url-fetch-error');\n      errorMessageDiv.classList.add('active');\n    });\n  }\n  openModal() {\n    document.body.classList.add(\"modal-open\");\n  }\n  closeModal() {\n    document.body.classList.remove(\"modal-open\");\n  }\n  downLoadCanvas() {\n    const canvas = this.canvas.current;\n    const img = canvas.toDataURL('image/jpg');\n    let a = document.createElement('a');\n    a.href = img;\n    a.download = 'myIslandImg.jpg';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  }\n  renderMap(url) {\n    const canvas = this.canvas.current;\n    canvas.width = this.state.canvasSizeX;\n    canvas.height = this.state.canvasSizeY;\n    paper.setup(canvas);\n    let raster = new paper.Raster(url);\n    const mapLayer = new paper.Layer();\n    mapLayer.name = 'mapLayer';\n    const drawLayer = new paper.Layer();\n    drawLayer.name = 'drawLayer';\n    const buildLayer = new paper.Layer();\n    buildLayer.name = 'buildLayer';\n    mapLayer.activate();\n    const bgRect = new paper.Shape.Rectangle({\n      x: 0,\n      y: 0,\n      width: this.state.canvasSizeX,\n      height: this.state.canvasSizeY,\n    });\n    bgRect.fillColor = setting.colorBg;\n    raster.onLoad = () => {\n      mapLayer.activate();\n      const mapRasterWidth = setting.sampleEndX - setting.sampleStartX;\n      const mapRasterHeight = setting.sampleEndY - setting.sampleStartY;\n      const mapRaster = raster.getSubRaster(new paper.Rectangle(setting.sampleStartX, setting.sampleStartY, mapRasterWidth, mapRasterHeight));\n      raster.remove();\n      mapRaster.visible = false;\n      mapRaster.size = new paper.Size(setting.squarePerBlock * setting.mapXBlock, setting.squarePerBlock * setting.mapYBlock);\n      for (let y = 0; y < mapRaster.height; y++) {\n        for(let x = 0; x < mapRaster.width; x++) {\n          const color = mapRaster.getPixel(x, y);\n          const pixelRect = new paper.Shape.Rectangle({\n            x: x * this.state.squareSize + setting.mapPadding, \n            y: y * this.state.squareSize + setting.mapPadding,\n            width: this.state.squareSize,\n            height: this.state.squareSize\n          });\n          pixelRect.fillColor = color;\n        }\n      }\n    }\n    this.renderGrid();\n    this.componentDidUpdate();\n  }\n  renderGrid() {\n    const gridLayer = new paper.Layer();\n    gridLayer.name = 'gridLayer';\n    gridLayer.activate();\n    let gridLine;\n    const dashStroke = [this.state.squareSize + 5, this.state.squareSize - 2]\n    for(let x = 0; x <= setting.squarePerBlock * setting.mapXBlock; x++) {\n      if (x % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, 0), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, setting.mapPadding), new paper.Point(x * this.state.squareSize + setting.mapPadding - 0.5, this.state.canvasSizeY - setting.mapPadding));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for(let y = 0; y <= setting.squarePerBlock * setting.mapYBlock; y++) {\n      if (y % setting.squarePerBlock === 0) {\n        gridLine = new paper.Path.Line(new paper.Point(0, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeWidth = 3;\n        gridLine.dashArray = dashStroke;\n        gridLine.strokeColor = setting.colorMainGrid;\n      }\n      else {\n        gridLine = new paper.Path.Line(new paper.Point(setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5), new paper.Point(this.state.canvasSizeX - setting.mapPadding, y * this.state.squareSize + setting.mapPadding - 0.5));\n        gridLine.strokeColor = setting.colorGrid;\n      }\n      gridLine.locked = true;\n    }\n    for (let i = 0; i < setting.mapYBlock; i++) {\n      const meridianMark = new paper.PointText(new paper.Point(setting.mapPadding / 5, this.state.squareSize * setting.squarePerBlock * (i + 0.5) + setting.mapPadding ));\n      meridianMark.fillColor = setting.colorGridMark;\n      meridianMark.fontSize = this.state.squareSize * 2;\n      meridianMark.content = String.fromCharCode(65 + i);\n      meridianMark.fontWeight = 'bold';\n    }\n    for (let j = 0; j < setting.mapXBlock; j++) {\n      let parallelMark = new paper.PointText(new paper.Point(this.state.squareSize * setting.squarePerBlock * (j + 0.5) + setting.mapPadding, this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding * 1.8));\n      parallelMark.fillColor = setting.colorGridMark;\n      parallelMark.fontSize = this.state.squareSize * 2;\n      parallelMark.content = j + 1;\n      parallelMark.fontWeight = 'bold';\n    }\n  }\n  changeMode(e) {\n    const target = e.target.closest('button');\n    const currentMode = target.getAttribute('id');\n    const currentModeData = toolData.toolData.find((data) => {\n      if (data.mode === currentMode) {\n        return data;\n      }\n    });\n    let currentItem;\n    if (currentMode === 'draw') {\n      currentItem = currentModeData.colors[0].colorName;\n    }\n    else {\n      currentItem = currentModeData.tools[0].items[0].item;\n    }\n    this.setState({\n      currentMode: currentMode,\n      currentModeData: currentModeData,\n      currentTool: currentModeData.tools[0].tool,\n      currentItem: currentItem\n    });\n    this.clearBrushHover();\n    this.clearNotBuiltItem();\n  }\n  changeTool(e) {\n    const target = e.target.closest('button');\n    const currentTool = target.getAttribute('id');\n    let currentItem = this.state.currentItem;\n    if (this.state.currentMode !== 'draw') {\n      const toolData = this.state.currentModeData.tools.find((data) => {\n        if (data.tool === currentTool) {\n          return data;\n        }\n      });\n      currentItem = toolData.items[0].item;\n    }\n    this.setState({\n      currentTool: currentTool,\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeItem(e) {\n    const target = e.target.closest('button');\n    const currentItem = target.getAttribute('id');\n    this.setState({\n      currentItem: currentItem\n    });\n    this.clearNotBuiltItem();\n  }\n  changeColor(e) {\n    this.setState({\n      customColor: e.target.value\n    });\n  }\n  isEditableArea(point) {\n    if (point.x > setting.mapPadding && point.x < this.state.squareSize * setting.squarePerBlock * setting.mapXBlock + setting.mapPadding && point.y > setting.mapPadding && point.y < this.state.squareSize * setting.squarePerBlock * setting.mapYBlock + setting.mapPadding) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  handleDraw() {\n    paper.project.layers.buildLayer.children.forEach((itemSet)=>{\n      itemSet.children.deletBtn.opacity = 0;\n    });\n    paper.project.layers.drawLayer.activate();\n    const drawTool = new paper.Tool();\n    drawTool.activate();\n    let size, colors;\n    const thisTool = this.state.currentModeData.tools.find((tool) => {\n      if (tool.tool === this.state.currentTool) {\n        return tool;\n      }\n    });\n    size = thisTool.size ? thisTool.size : 0;\n    if (this.state.currentItem === 'colorCustom') {\n      colors = [this.state.customColor];\n    }\n    else {\n      const thisColors = this.state.currentModeData.colors.find((color) => {\n        if (color.colorName === this.state.currentItem) {\n          return color;\n        }\n      });\n      colors = thisColors.color;\n    }\n    const refPointDist = (size - 1) * setting.squareSize;\n\n    if (!paper.project.activeLayer.children.brush) {\n      let brush = new paper.Shape.Rectangle({\n        x: setting.hideDist * -1, \n        y: setting.hideDist * -1,\n        width: size * this.state.squareSize,\n        height: size * this.state.squareSize\n      });\n      brush.fillColor = 'rgba(255,255,255,0.1)';\n      brush.strokeColor = 'rgba(255,255,255,0.8)';\n      brush.name = 'brush';\n    }\n    else {\n      if (paper.project.activeLayer.children.brush.width / this.state.squareSize !== size) {\n        paper.project.activeLayer.children.brush.remove();\n        let brush = new paper.Shape.Rectangle({\n          x: setting.hideDist * -1, \n          y: setting.hideDist * -1,\n          width: size * this.state.squareSize,\n          height: size * this.state.squareSize\n        });\n        brush.fillColor = 'rgba(255,255,255,0.1)';\n        brush.strokeColor = 'rgba(255,255,255,0.8)';\n        brush.name = 'brush';\n      }\n    }\n    const brushSquare = paper.project.activeLayer.children.brush;\n    drawTool.onMouseMove = (e) => {\n      let point = new paper.Point();\n      point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist + this.state.squareSize * size / 2;\n      brushSquare.position = point;\n    }\n    drawTool.onMouseDown = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n    drawTool.onMouseDrag = (e) => {\n      if (this.isEditableArea(e.point)) {\n        this.draw(e, size, refPointDist, colors);\n      }\n    }\n  }\n  draw(e, size, refPointDist, colors) {\n    paper.project.layers.drawLayer.activate();\n    let point = new paper.Point(0, 0);\n    let testPoint = new paper.Point(0, 0);\n    const brushSquare = paper.project.activeLayer.children.brush;\n    point.x = e.point.x - (e.point.x - setting.mapPadding) % this.state.squareSize - refPointDist;\n    point.y = e.point.y - (e.point.y - setting.mapPadding) % this.state.squareSize - refPointDist;\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        const drawRect = new paper.Shape.Rectangle({\n          x: point.x + i * this.state.squareSize, \n          y: point.y + j * this.state.squareSize,\n          width: this.state.squareSize,\n          height: this.state.squareSize\n        });\n        brushSquare.position = [point.x + size * this.state.squareSize / 2, point.y + size * this.state.squareSize / 2];\n        testPoint.x = point.x + i * this.state.squareSize + this.state.squareSize / 2;\n        testPoint.y = point.y + j * this.state.squareSize + this.state.squareSize / 2;\n        let hitResult = paper.project.layers[2].hitTest(testPoint, {            \n          fill: true\n        });\n        if (hitResult && hitResult.item.name !== 'brush') {\n          hitResult.item.remove();\n        }\n        drawRect.fillColor = colors[Math.floor(Math.random() * colors.length)];\n      }\n    }\n  }\n  handleBuildAndPlant() {\n    paper.project.layers.buildLayer.activate();\n    const buildTool = new paper.Tool();\n    buildTool.activate();\n    let size;\n    let isBuild = true;\n    let isEdit = false;\n    let buildPath;\n    let baseBlock;\n    let buildItem;\n    const currentTool = this.state.currentTool;\n    const thisTool = this.state.currentModeData.tools.find((tool) => {\n      if (tool.tool === currentTool) {\n        return tool;\n      }\n    });\n    const thisItem = thisTool.items.find((item) => {\n      if (item.item === this.state.currentItem) {\n        return item;\n      }\n    });\n    if (this.state.currentMode === 'build') {\n      size = thisItem.size;\n\n      buildPath = new paper.Shape.Rectangle({\n        x: 0, \n        y: 0,\n        width: size[0] * this.state.squareSize,\n        height: size[1] * this.state.squareSize\n      });\n\n      // oblique bridge\n      if (this.state.currentItem === 'b45' || this.state.currentItem === 'b135') {\n        buildPath.size = [2 * this.state.squareSize, 4 * this.state.squareSize];\n        buildPath.rotate(parseInt(this.state.currentItem.replace('b', '')));\n      }\n      buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n      buildPath.strokeColor = setting.strokeColorBilding;\n      buildItem = new paper.Group([buildPath]);\n    }\n    else if (this.state.currentMode === 'plant') {\n      size = thisTool.size;\n      baseBlock = new paper.Shape.Rectangle({\n        x: 0, \n        y: 0,\n        width: size[0] * this.state.squareSize,\n        height: size[1] * this.state.squareSize\n      });\n      buildItem = new paper.Group([baseBlock]);\n\n      if (this.state.currentTool === 'tree') {\n        buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize * 0.7 / 2);\n        buildPath.fillColor = thisItem.color ? thisItem.color : thisTool.color;\n        buildPath.strokeColor = setting.strokeColorPlant;\n        buildPath.opacity = 0.5;\n      }\n      else if (this.state.currentTool === 'flower') {\n        buildPath = new paper.Shape.Circle(new paper.Point(size[0] * this.state.squareSize / 2, size[1] * this.state.squareSize / 2), size[0] * this.state.squareSize / 2);\n        buildPath.fillColor = thisItem.item;\n        buildPath.strokeColor = setting.strokeColorPlant;\n      }\n      buildItem.addChild(buildPath);\n    }\n    \n    // add img\n    if (thisItem.image && (thisTool.tool !== 'bridge' && thisTool.tool !== 'slope')) {\n      const buildImage = new paper.Group();\n      const that = this;\n      buildImage.importSVG(process.env.PUBLIC_URL + '/' + thisItem.image, function(item) {\n        const squareSize = that.state.squareSize;\n        const imageSizeSquare = currentTool === 'tree' ? 1 : 2.8;\n        const scale =  squareSize * imageSizeSquare / buildImage.bounds.size._height;\n        buildImage.scale(scale);\n        buildImage.position = buildItem.position;\n        buildImage.locked = true;\n        buildItem.addChild(buildImage);\n      });\n    }\n    let deletBtnBg = new paper.Shape.Circle({\n      center: [buildItem.bounds.size._width, 0], \n      radius: this.state.squareSize * 0.8\n    });\n    deletBtnBg.fillColor = '#555';\n    let deletBtnIcon = new paper.PointText(new paper.Point(buildItem.bounds.size._width - (this.state.squareSize * 1.6 - 6) / 2, (this.state.squareSize * 1.6 - 6) / 2));\n    deletBtnIcon.fillColor = '#eee';\n    deletBtnIcon.content = '×';\n    deletBtnIcon.locked = true;\n    let deletBtn = new paper.Group([deletBtnBg, deletBtnIcon]);\n    deletBtn.name = 'deletBtn';\n    deletBtn.opacity = 0;\n    deletBtn.locked = true;\n    let itemSet = new paper.Group([buildItem, deletBtn]);\n    itemSet.position = [setting.hideDist * -1, setting.hideDist * -1];\n    buildTool.onMouseMove = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseDown = (e) => {\n      if (isBuild) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n        isBuild = false;\n        itemSet.data.built = true;\n      }\n      else {\n        paper.project.activeLayer.children.forEach((itemSet) => {\n          itemSet.children.deletBtn.opacity = 0;\n        });\n        const hitResult = paper.project.layers.buildLayer.hitTest(e.point, {\n          fill: true,\n          tolerance: 1\n        });\n        if (!hitResult) {\n          isEdit = false;\n          return;\n        }\n        else {\n          if (!(hitResult.item.parent.name === 'deletBtn')) {\n            itemSet = hitResult.item.parent.parent;\n            isEdit = true;\n            itemSet.children.deletBtn.opacity = 1;\n            itemSet.children.deletBtn.locked = false;\n          }\n          else {\n            hitResult.item.parent.parent.remove();\n          }\n        }\n      }\n    }\n    buildTool.onMouseDrag = (e) => {\n      if (isEdit) {\n        itemSet.position.x = this.getSnapPoint(e.point.x, true, itemSet);\n        itemSet.position.y = this.getSnapPoint(e.point.y, false, itemSet);\n      }\n    }\n    buildTool.onMouseUp = (e) => {\n      this.setState({\n        currentItem: null\n      });\n      document.querySelectorAll('button.item').forEach(function(btn){\n        btn.blur();\n      });\n    }\n  }\n  getSnapPoint(point, isX, itemSet) {\n    let snapPoint;\n    if (isX) {\n      snapPoint = point - (point - itemSet.bounds._width / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    else {\n      snapPoint = point - (point - itemSet.bounds._height / 2 - setting.mapPadding) % this.state.squareSize;\n    }\n    return snapPoint;\n  }\n  clearBrushHover() {\n    if (paper.project.layers.drawLayer.children.brush) {\n      paper.project.layers.drawLayer.children.brush.remove();\n    }\n  }\n  clearNotBuiltItem() {\n    const lastBuild = paper.project.layers.buildLayer.children[paper.project.layers.buildLayer.children.length - 1];\n    if (lastBuild && !lastBuild.data.built) {\n      lastBuild.remove();\n    }\n  }\n  render() {\n    if (!this.state.isImgUploaded) {\n      return (\n        <div className='intro'>\n          <h1><div>Lazy Island Planner</div></h1>\n          <div className='lang-menu'>\n            <button name='zh-TW' className={(this.state.language === 'zh-TW' || this.state.language === 'zh') ? 'active' : ''} onClick={this.changeLanguage}>台灣華語</button>\n            <button name='en' className={(this.state.language !== 'zh-TW' && this.state.language !== 'zh' && this.state.language !== 'ja') ? 'active' : ''} onClick={this.changeLanguage}>English</button>\n            <button name='ja' className={this.state.language === 'ja' ? 'active' : ''} onClick={this.changeLanguage}>日本語</button>\n          </div>\n          <Translation>\n            {(t, { i18n }) => \n              <div>\n                <p>{t('This is a simple tool for Animal Crossing')}</p>\n                <p>{t('Upload your map screenshot to start')}{t('or you can')}<button className='link' id='mapUseDefault' onClick={this.loadMapFromUrl}>{t('try with my map')}</button>{t('period')}</p>\n                <p>{t('This is for desktop browser')}</p>\n              </div>\n            }\n          </Translation>\n          <img src={sampleImg} alt='Map sample' className='island-map' />\n          <Translation>\n            {(t, { i18n }) => \n              <form>\n                <input type='file' accept='image/.jpg, .jpeg' id='img-input' onChange={this.upLoadImg} />\n                <label htmlFor='img-input' className='btn fake-input'>{t('Upload image')}</label>\n                <div id='img-input-error' className='error-message'>{t('Sorry this seems not a correct map image')}</div>\n                <div className='or'>{t('or')}</div>\n                <div className='use-url'>\n                  <label>{t('Use the URL of uploaded image')}</label>\n                  <input type='text' ref={this.urlInput}  /> \n                  <button type='button' id='mapFromUrl' onClick={this.loadMapFromUrl}>{t('Confirm')}</button>\n                </div>\n                <div id='url-error' className='error-message'>{t('Sorry this seems not a correct map image url')}</div>\n                <div id='url-fetch-error' className='error-message'>{t('Sorry can not get image from URL')}</div>\n              </form>\n            }\n          </Translation>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className='wrapper'>\n          <div className='editor'>\n            <aside className='tool-aside'>\n              <div className='modes'>\n                <MenuModes toolData={toolData.toolData} currentMode = {this.state.currentMode} onClick={this.changeMode} />\n              </div>\n              \n              <div className='tools'>\n                <MenuTools currentTool={this.state.currentTool} currentModeData={this.state.currentModeData} onClick={this.changeTool} />\n                <MenuItems currentMode={this.state.currentMode} currentModeData={this.state.currentModeData} currentTool={this.state.currentTool} currentItem={this.state.currentItem} onClick={this.changeItem} customColor={this.state.customColor} changeColor={this.changeColor} /> \n              </div>\n            </aside>\n            <canvas id='canvas' ref={this.canvas}>\n            </canvas>\n            <aside className='sub-aside'>\n              <Translation>\n                {(t, { i18n }) => \n                  <ul>\n                    <li>\n                      <button type='button' title={t('Info')} onClick={this.openModal}>\n                        <img src={process.env.PUBLIC_URL + '/icon_question.svg'} alt={t('Info')} />\n                      </button>\n                    </li>\n                    <li>\n                      <button type='button' title={t('Download map')} onClick={this.downLoadCanvas}>\n                        <img src={process.env.PUBLIC_URL + '/icon_download.svg'} alt={t('Download map')} />\n                      </button>\n                    </li>\n                  </ul>\n                }\n              </Translation>\n            </aside>\n          </div>\n          <Translation>\n            {(t, { i18n }) => \n              <div id='info-modal'>\n                <button className='close-modal round' onClick={this.closeModal}>×</button>\n                <h1><div>Lazy Island Planner</div></h1>\n                <p>{t('This is a very simple tool')}<strong>{t('No undo')}{t('No save')}</strong></p>\n                <p>{t('You can try other great tools')}</p>\n                <ul>\n                  <li>\n                    <a href='https://eugeneration.github.io/HappyIslandDesigner/' target='_blank'>Happy Island Designer</a>\n                  </li>\n                  <li>\n                    <a href='https://bobacupcake.itch.io/island-planner' target='_blank'>Island Planner</a>\n                  </li>\n                </ul>\n                <button className='btn close-modal' onClick={this.closeModal}>{t('Close')}</button>\n              </div>\n            }\n          </Translation>\n        </div>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}